import { __decorate } from "tslib";
import { LitElement, css, html, property, customElement, } from 'lit-element';
let IconsDemo = /** @class */ (() => {
    let IconsDemo = class IconsDemo extends LitElement {
        constructor() {
            super();
            this.name = 'ui';
            this.iconset = [];
            this.iconset = [];
            this.handleIconSetAdded = this.handleIconSetAdded.bind(this);
        }
        connectedCallback() {
            super.connectedCallback();
            window.addEventListener('sp-iconset-added', this.handleIconSetAdded);
        }
        disconnectedCallback() {
            window.removeEventListener('sp-iconset-added', this.handleIconSetAdded);
            super.disconnectedCallback();
        }
        handleIconSetAdded(event) {
            const { iconset } = event.detail;
            this.iconset = iconset.getIconList();
            this.requestUpdate();
        }
        static get styles() {
            return [
                css `
                :host {
                    display: grid;
                    grid-template-columns: repeat(auto-fit, minmax(150px, 1fr));
                    gap: 20px;
                }
                .icon {
                    display: flex;
                    flex-direction: column;
                    align-items: center;
                }
                sp-icon {
                    margin-bottom: 10px;
                }
            `,
            ];
        }
        render() {
            return html `
            <slot></slot>
            ${this.iconset.map((icon) => html `
                    <div class="icon">
                        <sp-icon
                            size="l"
                            name=${`${this.name}:${icon}`}
                        ></sp-icon>
                        ${icon}
                    </div>
                `)}
        `;
        }
    };
    __decorate([
        property()
    ], IconsDemo.prototype, "name", void 0);
    IconsDemo = __decorate([
        customElement('icons-demo')
    ], IconsDemo);
    return IconsDemo;
})();
export { IconsDemo };
//# sourceMappingURL=icons-demo.js.map